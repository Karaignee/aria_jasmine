Get started with Heroku
If you haven’t done so already, you will need an account on Heroku:
1.	Create an account at the following location: https://id.heroku.com/signup
2.	After creating an account, you will need to install the heroku toolbelt on your local machine. This application will allow you to automatically deploy your work to Heroku. You will need to download and install the toolbelt from https://toolbelt.heroku.com/ .
3.	After installation of the toolbelt, run the following command:
heroku

Create a new git repository
Back on the browser you’ll need to fork a repository which will set you up with a special, pre-canned template for supporting static pages on heroku.  Use the following steps:
1.	In github.com, create a new repository that you will use to hold your static static site. Add a ruby .gitignore and a README.md
2.	Clone this repository onto your machine.
3.	Material from here on is based on the heroku tutorial located at: https://devcenter.heroku.com/articles/static-sites-ruby
4.	Cd <repo>
5.	mkdir -p public/{images,js,css}
6.	touch {config.ru, public/index.html}
7.	bundle init
8.	Edit your Gemfile and add the following 2 lines:
source :rubygems
gem 'rack'
9.	bundle install
10.	Edit your config.ru file and put the following into it:
use Rack::Static,
  :urls => ["/images", "/js", "/css"],
  :root => "public"

run lambda { |env|
  [
    200,
    {
      'Content-Type'  => 'text/html',
      'Cache-Control' => 'public, max-age=86400'
    },
    File.open('public/index.html', File::RDONLY)
  ]
}

11.	Add everything to 
git add .
12.	Now we need to add a heroku remote:
heroku create
13.	Watch the output of the create command, it will give you the details of the heroku git repository, something like the following output:

Creating cryptic-shelf-9450... done, stack is cedar
http://cryptic-shelf-9450.herokuapp.com/ | git@heroku.com:cryptic-shelf-9450.git

14.	You will need to add this repository as an extra remote as follows:

git remote add heroku git@heroku.com:cryptic-shelf-9450.git

15.	Edit your index.html and put some valid html in there
16.	git commit –a –m “First Commit”

Now make this live:
17.	git push heroku master
18.	If all went well, navigate to the url of your heroku application and see your html being served up.


Congratulations, you’ve just deployed your site to herkou.

Follow up tasks:
1.	Make some changes to your html and update the site. What do you have to do?
2.	Add some css to make it look prettier.
3.	Make sure you push all your changes onto your github repo as well!


